name: 'Fetch SBOM'
description: 'fetch-sbom action gets the project SBOM and uploads it as an artifact'
author: 'Sonatype'

branding:
  icon: 'shield'
  color: 'purple'

inputs:
  iq-server-url:
    description: 'Lifecycle (IQ Server) URL (e.g. http://localhost:8070).'
    required: true
  username:
    description: 'The username to authenticate with Lifecycle (IQ Server).'
    required: true
  password:
    description: 'The password to authenticate with Lifecycle (IQ Server).'
    required: true
  application-id:
    description: 'Lifecycle (IQ Server) application ID.'
    required: true
  scan-id:
    description: 'The scan ID to fetch the report.'
    required: true
  sbom-standard:
    description: 'The SBOM standard: spdx or cycloneDx.'
    required: true
  sbom-format:
    description: 'The output file format: json or xml.'
    required: false
    default: 'json'
  sbom-version:
    description:
      'The version of the SBOM (- Available CycloneDX Versions: 1.2, 1.3, 1.4, 1.5, 1.6. Default version for CycloneDX
      is 1.6 - Available SPDX versions: 2.2, 2.3, Default for SPDX is 2.3)'
    required: false
  artifact-name:
    description: 'The name of the artifact to be uploaded.'
    required: false
    default: 'sbom-document'
  push-dependency-graph:
    description:
      'If set, the dependency information from the fetched SBOM will be available in GitHub Insights Dependency Graph.'
    required: false
    default: false
  token:
    description: 'GitHub Personal Access Token (PAT). Defaults to the PAT provided by the actions runner.'
    required: false
    default: ${{ github.token }}

outputs:
  sbom-file-path:
    description: 'The path to the SBOM file to upload as artifact'

runs:
  using: node20
  main: dist/main/index.js
  post: dist/cleanup/index.js
